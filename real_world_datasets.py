# -*- coding: utf-8 -*-
"""real_world_datasets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tMrglGwDUFk2rgxZcfD2_ibMC_00_cwY

- real world datasets, distributions
- aic and bic

> Why do we fit distributions to data?

The short answer would be to make life easier in using the data to make predictions. For example, we can reduce the observational data to a small number of parameters such as mean and variance. We can then use known properties of our fitted distribution to predict, for example, how likely we are to find a new observation above or below a particular value

> AIC and BIC

-The AIC and BIC are both methods of assessing model fit penalized for the number of estimated parameters.

-The AIC tries to select the model that most adequately describes an unknown, high dimensional reality. This means that reality is never in the set of candidate models that are being considered. On the contrary, BIC tries to find the TRUE model among the set of candidates.
"""

#pip install fitter

#pip install distfit

import numpy as np
import pandas as pd
import seaborn as sns
import scipy.stats
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

df = pd.read_csv("GlobalLandTemperaturesByState.csv")

df.head()

df2=df.dropna()

df2.info()

sns.set_style('white')
sns.set_context("paper", font_scale=1.5)

sns.displot(df2['AverageTemperature'])

plt.hist(df2['AverageTemperature'], bins = 100, density = True)
plt.show()

X = df2['AverageTemperature'].values #creating a numpy array

from distfit import distfit

# Initialize distfit
dist = distfit()

# Determine best-fitting probability distribution for data
dist.fit_transform(X)

dist.plot()

dist.plot_summary()

# we can also make predictions on new datapoints based on the fit
y = [-25,3,4,5,6,10,11,12,18,20, 30, 45]
results = dist.predict(y)

# The plot function will now also include the predictions of y
dist.plot()

